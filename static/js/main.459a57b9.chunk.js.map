{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","maxPage","Math","ceil","isFirstPage","isLastPage","pageToRender","handlePageChange","page","className","cn","disabled","href","onClick","map","num","active","DEFAULT_VALUES","ITEMS","PER_PAGE","CURRENT_PAGE","ITEMS_PER_PAGE","App","itemsPerPage","items","useState","setPerPage","setCurrentPage","itemsToRender","maxItems","getLastItem","at","id","value","onChange","event","target","handleChangePerPage","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAUC,KAAKC,KAAKN,EAAQC,GAC5BM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBE,EAE7BK,EAAehB,EAAW,EAAGW,GAE7BM,EAAmB,SAACC,GACpBA,IAAST,GAAeS,EAAOP,GAAWO,EAAO,GAIrDR,EAAaQ,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUP,IADZ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeR,EACfS,QAAS,kBAAMN,EAAiBR,EAAc,IALhD,oBAWDO,EAAaQ,KAAI,SAACC,GAAD,OAChB,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQjB,IAAgBgB,IAF5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMN,EAAiBQ,IAJlC,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUN,IADZ,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAMN,EAAiBR,EAAc,IALhD,wBCjEFkB,EAAiB,CACrBC,MAAO,GACPC,SAAU,EACVC,aAAc,EACdC,eAAgB,CAAC,EAAG,EAAG,GAAI,KAGhBC,EAAgB,WAC3B,IAIsBC,EAJhBC,EAAQP,EAAeC,MAC7B,EAA8BO,mBAASR,EAAeE,UAAtD,mBAAOrB,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAASR,EAAeG,cAA9D,mBAAOrB,EAAP,KAAoB4B,EAApB,KAkBMC,EAAgBtC,GAhBAiC,EAiBPzB,GAASC,GAhBUwB,EAAe,GAG7B,SAClBA,EACAf,EACAqB,GAEA,OAAKN,EAAef,GAASqB,EACpBA,EAGFN,EAAef,EAKtBsB,CAAYhC,EAASC,EAAayB,IAQpC,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiC6B,EAAc,GAD/C,cACuDA,EAAcG,IAAI,GADzE,eACkFP,EADlF,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OApBQ,SAACA,GAC3BT,GAAYS,EAAMC,OAAOH,OACzBN,EAAeV,EAAeG,cAkBDiB,CAAoBF,IAL3C,SAOGlB,EAAeI,eAAeP,KAAI,SAACC,GAAD,OACjC,wBACEkB,MAAOlB,EADT,SAIGA,GAFIA,UAQb,uBACEuB,QAAQ,kBACR7B,UAAU,qBAFZ,+BAQF,cAAC,EAAD,CACEZ,MAAO2B,EACP1B,QAASA,EACTC,YAAaA,EACbC,aAAc2B,IAGhB,6BACGC,EAAcd,KAAI,SAACC,GAAD,OACjB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YCvFjBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.459a57b9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (num: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const maxPage = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === maxPage;\n\n  const pageToRender = getNumbers(1, maxPage);\n\n  const handlePageChange = (page: number) => {\n    if (page === currentPage || page > maxPage || page < 1) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pageToRender.map((num) => (\n        <li\n          className={cn('page-item', {\n            active: currentPage === num,\n          })}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => handlePageChange(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst DEFAULT_VALUES = {\n  ITEMS: 42,\n  PER_PAGE: 5,\n  CURRENT_PAGE: 1,\n  ITEMS_PER_PAGE: [3, 5, 10, 20],\n};\n\nexport const App: React.FC = () => {\n  const items = DEFAULT_VALUES.ITEMS;\n  const [perPage, setPerPage] = useState(DEFAULT_VALUES.PER_PAGE);\n  const [currentPage, setCurrentPage] = useState(DEFAULT_VALUES.CURRENT_PAGE);\n\n  const getFirstItem = (itemsPerPage: number, page: number) => {\n    return (itemsPerPage * page) - (itemsPerPage - 1);\n  };\n\n  const getLastItem = (\n    itemsPerPage: number,\n    page: number,\n    maxItems: number,\n  ) => {\n    if ((itemsPerPage * page) >= maxItems) {\n      return maxItems;\n    }\n\n    return itemsPerPage * page;\n  };\n\n  const itemsToRender = getNumbers(\n    getFirstItem(perPage, currentPage),\n    getLastItem(perPage, currentPage, items),\n  );\n\n  const handleChangePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(DEFAULT_VALUES.CURRENT_PAGE);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsToRender[0]} - ${itemsToRender.at(-1)} of ${items})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => handleChangePerPage(event)}\n          >\n            {DEFAULT_VALUES.ITEMS_PER_PAGE.map((num) => (\n              <option\n                value={num}\n                key={num}\n              >\n                {num}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label\n          htmlFor=\"perPageSelector\"\n          className=\"col-form-label col\"\n        >\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {itemsToRender.map((num) => (\n          <li\n            data-cy=\"item\"\n            key={num}\n          >\n            {`Item ${num}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}