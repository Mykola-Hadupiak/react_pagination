{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesNumbers","Math","ceil","pages","lastPage","firstPage","prevPage","nextPage","handlePageChange","page","className","classNames","disabled","href","onClick","map","active","items","selectOptions","App","useState","setPerPage","setCurrentPage","maxItemPerPage","firstItemOnPage","lastItemOnPage","id","value","onChange","event","target","option","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCHIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAiBJ,EAAQC,IAAa,EACxCD,EAAQC,EACRI,KAAKC,KAAKN,EAAQC,GAEhBM,EAAQd,EAAW,EAAGW,GAEtBI,EAAWN,IAAgBE,EAC3BK,EAA4B,IAAhBP,EACZQ,EAAWR,EAAc,EACzBS,EAAWT,EAAc,EAEzBU,EAAmB,SAACC,GACpBA,IAASX,GAAeW,EAAOT,GAAgBS,EAAO,GAI1DV,EAAaU,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUP,IAAnD,SACE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMP,GACV,gBAAeD,EACfS,QAAS,kBAAMN,EAAiBF,IALlC,oBAUDH,EAAMY,KAAI,SAAAN,GAAI,OACb,oBACEC,UAAWC,IAAW,YAAa,CAAEK,OAAQlB,IAAgBW,IAD/D,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMf,EAAaU,IAJ9B,SAMGA,KAREA,MAaT,oBAAIC,UAAWC,IAAW,YAAa,CAAEC,SAAUR,IAAnD,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMN,GACV,gBAAeH,EACfU,QAAS,kBAAMN,EAAiBD,IALlC,wBCrDFU,EAAQ5B,EAAW,EAAG,IACzB0B,KAAI,SAAAtB,GAAC,qBAAYA,MAGdyB,EAAgB,CAAC,EAAG,EAAG,GAAI,IAEpBC,EAAgB,WAC3B,MAA8BC,mBAASF,EAAc,IAArD,mBAAOrB,EAAP,KAAgBwB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOtB,EAAP,KAAoBwB,EAApB,KAEMC,EAAiB1B,EAAUC,EAC3B0B,EAAkBD,EAAiB1B,EAEnC4B,EAAiBF,EAVN,MAYbA,EAWJ,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiC0B,EAAkB,EADnD,cAC0DC,EAD1D,eA3Ba,GA2Bb,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAO9B,EACP+B,SApBW,SAACC,GACpBR,GAAYQ,EAAMC,OAAOH,OACzBL,EAAe,IAaT,SAQGJ,EAAcH,KAAI,SAAAgB,GAAM,OACvB,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAvDW,GAwDXC,QAASA,EACTC,YAAaA,EACbC,aA5Ce,SAACU,GACpBa,EAAeb,MA6Cb,6BACGQ,EAAMgB,MAAMT,EAAiBC,GAAgBV,KAAI,SAAAmB,GAAI,OACpD,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.864e7c41.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { Props } from '../../types/pagination';\nimport { getNumbers } from '../../utils';\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesNumbers = ((total % perPage) === 0)\n    ? total / perPage\n    : Math.ceil(total / perPage);\n\n  const pages = getNumbers(1, pagesNumbers);\n\n  const lastPage = currentPage === pagesNumbers;\n  const firstPage = currentPage === 1;\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n\n  const handlePageChange = (page: number) => {\n    if (page === currentPage || page > pagesNumbers || page < 1) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${prevPage}`}\n          aria-disabled={firstPage}\n          onClick={() => handlePageChange(prevPage)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          className={classNames('page-item', { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${nextPage}`}\n          aria-disabled={lastPage}\n          onClick={() => handlePageChange(nextPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst totalPages = 42;\nconst selectOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(selectOptions[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const maxItemPerPage = perPage * currentPage;\n  const firstItemOnPage = maxItemPerPage - perPage;\n\n  const lastItemOnPage = maxItemPerPage > totalPages\n    ? totalPages\n    : maxItemPerPage;\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage + 1} - ${lastItemOnPage} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n\n            {selectOptions.map(option => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalPages}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {items.slice(firstItemOnPage, lastItemOnPage).map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}